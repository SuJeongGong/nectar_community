<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.nectarsoft.community.user.dao.UserDAO">

    <resultMap type="User" id="userResultMap">
        <result property="deleteDate" column="DELETE_DATE"/>
        <result property="deleteAt" column="DELETE_AT"/>
        <result property="id" column="ID"/>
        <result property="pw" column="PW"/>
        <result property="name" column="NAME"/>
        <result property="nickname" column="NICKNAME"/>
        <result property="auth" column="AUTH"/>
        <result property="phone" column="PHONE"/>
        <result property="email" column="EMAIL"/>
        <result property="lastLoginDate" column="LAST_LOGINED"/>
    </resultMap>


    <select id="selectCountUserById" parameterType="String" resultType="int">
        select count(*)
        from "USER"
        where id = #{id}
    </select>

    <select id="selectCountUserByEmail" parameterType="String" resultType="int">
        select count(*)
        from "USER"
        where Email = #{email}
    </select>

    <insert id="insertUser" parameterType="User">
        insert into "USER"(id,
                           pw,
                           auth,
                           name,
                           phone,
                           NICKNAME,
                           email,
                           last_logined,
                           delete_at)
        values (#{id},
                #{pw},
                'USER',
                #{name},
                #{phone},
                #{nickname},
                #{email},
                #{lastLoginDate},
                'F')
    </insert>

    <select id="selectUserById" parameterType="string" resultMap="userResultMap">
        select *
        from "USER"
        where ID = #{id}
    </select>

    <update id="updateLoginData" parameterType="User">
        update "USER"
        set last_logined = #{lastLoginDate}
            ,WARN_MAIL_DATE = ''
        where id = #{id}
    </update>

    <insert id="insertLoginLog" parameterType="User">
        insert into LOGIN_LOG (IDX,
                               USER_ID,
                               USER_IP,
                               LOGIN_DATE)
        values (login_log_idx.nextval,
                #{id},
                #{ip},
                #{lastLoginDate})
    </insert>


    <select id="selectUsersNotLogined" resultMap="userResultMap" parameterType="string">
        select *
        from "USER"
        where LAST_LOGINED &lt; #{date}
            and WARN_MAIL_DATE IS NULL
            and delete_at = 'F'
    </select>

    <update id="deleteUsers" parameterType="string">
        update "USER"
        set name = '-',
            nickname = '탈퇴한 유저',
            pw = '-',
            email = USER_EMAIL.nextval,
            last_logined ='-',
            phone = '-'
        where DELETE_AT = 'T'
            and  DELETE_DATE  &lt; #{date}
    </update>

    <update id="withdrawNotLoginUsers" parameterType="map">
        update "USER"
        set delete_at = 'T'
            , delete_date = #{deleteDate}
        where WARN_MAIL_DATE &lt; #{date}
    </update>


    <update id="withdrawUser" parameterType="User">
        update "USER"
        set delete_at = 'T'
          , delete_date = #{deleteDate}
        where id = #{id}
    </update>


    <update id="updateUser"  parameterType="User">
        update  "USER"
        set     name = #{name},
                NICKNAME = #{nickname},
                phone = #{phone}
                <if test="pw != null and pw != ''">
                    , pw = #{pw}
                </if>
                <if test="email != null and email != ''">
                    ,email = #{email}
                </if>
        where   id=#{id}
    </update>
    <update id="updateWarnMailNotLoginUser" parameterType="User">
        update "USER"
        set Warn_Mail_date = #{warnMailDate}
        where ID=#{id}
    </update>
</mapper>